#compdef pdf2laser

_pdf2laser()
{
	local cur prev opts

	COMPREPLY=()

	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"

	short_opts="-D -F -M -O -P -R -V -a -d -f -h -j -m -n -p -r -s -v"
	long_opts="--autofocus --debug --dpi --frequency --help --job --job-mode \
	           --mode --multipass --no-fallthrough --no-optimize --preset \
	           --printer --raster-power --raster-speed screen-size \
	           --vector-power --vector-speed --version"

	case "${prev}" in
        --printer|-p|--preset|-P|--job|-n|--dpi|-d|--raster-power|-R|\
            --raster-speed|-r|--screen-size|-s|--frequency|-f|\
            --vector-power|-V|--vector-speed|-v|--multipass|-M)

			# Stop completion on the flags that need arguments.
			return 0
			;;
		-m|--mode)
			COMPREPLY=( $(compgen -W "mono grey colour" -- ${cur}) )
			return 0
			;;
        -j|--job-mode)
            COMPREPLY=( $(compgen -W "combined raster vector" -- ${cur}) )
            return 0
            ;;
		*)
			if [[ ${cur} == --* ]]; then
				COMPREPLY=( $(compgen -W "${long_opts}" -- ${cur}) )
				return 0
			elif [[ ${cur} == -* ]]; then
				COMPREPLY=( $(compgen -W "${short_opts}" -- ${cur}) )
				return 0
			fi

			COMPREPLY=( $(compgen -f -d -- "${cur}") )
			return 0
			;;
	esac
}

 complete -F _pdf2laser pdf2laser
